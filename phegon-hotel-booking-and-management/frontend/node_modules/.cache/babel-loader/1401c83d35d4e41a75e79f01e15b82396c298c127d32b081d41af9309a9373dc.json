{"ast":null,"code":"var _jsxFileName = \"D:\\\\DACN\\\\phegon-hotel-booking-and-management\\\\frontend\\\\src\\\\component\\\\auth\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\n// // import React, { useState } from \"react\";\n// // import { useNavigate, useLocation } from \"react-router-dom\";\n// // import ApiService from \"../../service/ApiService\";\n\n// // function LoginPage() {\n// //   const [email, setEmail] = useState(\"\");\n// //   const [password, setPassword] = useState(\"\");\n// //   const [error, setError] = useState(\"\");\n// //   const navigate = useNavigate();\n// //   const location = useLocation();\n\n// //   const from = location.state?.from?.pathname || \"/home\";\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n\n// //     if (!email || !password) {\n// //       setError(\"Please fill in all fields.\");\n// //       setTimeout(() => setError(\"\"), 5000);\n// //       return;\n// //     }\n\n// //     try {\n// //       const response = await ApiService.loginUser({ email, password });\n// //       if (response.statusCode === 200) {\n// //         localStorage.setItem(\"token\", response.token);\n// //         localStorage.setItem(\"role\", response.role);\n// //         navigate(from, { replace: true });\n// //       }\n// //     } catch (error) {\n// //       setError(error.response?.data?.message || error.message);\n// //       setTimeout(() => setError(\"\"), 5000);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"auth-container\">\n// //       <h2>Login</h2>\n// //       {error && <p className=\"error-message\">{error}</p>}\n// //       <form onSubmit={handleSubmit}>\n// //         <div className=\"form-group\">\n// //           <label>Email: </label>\n// //           <input\n// //             type=\"email\"\n// //             value={email}\n// //             onChange={(e) => setEmail(e.target.value)}\n// //             required\n// //           />\n// //         </div>\n// //         <div className=\"form-group\">\n// //           <label>Password: </label>\n// //           <input\n// //             type=\"password\"\n// //             value={password}\n// //             onChange={(e) => setPassword(e.target.value)}\n// //             required\n// //           />\n// //         </div>\n// //         <button type=\"submit\">Login</button>\n// //       </form>\n\n// //       <p className=\"register-link\">\n// //         Don't have an account? <a href=\"/register\">Register</a>\n// //       </p>\n// //     </div>\n// //   );\n// // }\n\n// // export default LoginPage;\n// import React, { useState } from \"react\";\n// import { useNavigate, useLocation } from \"react-router-dom\";\n// import ApiService from \"../../service/ApiService\";\n// import \"./LoginPage.css\"; // Sử dụng file CSS đã cập nhật\n\n// function LoginPage() {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const navigate = useNavigate();\n//   const location = useLocation();\n\n//   const from = location.state?.from?.pathname || \"/home\";\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!email || !password) {\n//       setError(\"Please fill in all fields.\");\n//       setTimeout(() => setError(\"\"), 5000);\n//       return;\n//     }\n\n//     try {\n//       const response = await ApiService.loginUser({ email, password });\n//       if (response.statusCode === 200) {\n//         localStorage.setItem(\"token\", response.token);\n//         localStorage.setItem(\"role\", response.role);\n//         navigate(from, { replace: true });\n//       }\n//     } catch (error) {\n//       setError(error.response?.data?.message || error.message);\n//       setTimeout(() => setError(\"\"), 5000);\n//     }\n//   };\n\n//   return (\n//     <div className=\"auth-page\">\n//       <div className=\"background-video-container\">\n//         <video autoPlay loop muted className=\"background-video\">\n//           <source src=\"/path-to-your-video.mp4\" type=\"video/mp4\" />\n//         </video>\n//       </div>\n\n//       <div className=\"auth-container\">\n//         <h2 className=\"login-title\">Login</h2>\n//         {error && <p className=\"error-message\">{error}</p>}\n//         <form onSubmit={handleSubmit} className=\"login-form\">\n//           <div className=\"form-group\">\n//             <label>Email: </label>\n//             <input\n//               type=\"email\"\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//               required\n//               className=\"animated-input\"\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label>Password: </label>\n//             <input\n//               type=\"password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               required\n//               className=\"animated-input\"\n//             />\n//           </div>\n//           <button type=\"submit\" className=\"animated-button\">\n//             Login\n//           </button>\n//         </form>\n\n//         <p className=\"register-link\">\n//           Don't have an account? <a href=\"/register\">Register</a>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default LoginPage;\nimport React, { useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport ApiService from \"../../service/ApiService\";\nimport { GoogleLogin } from \"@react-oauth/google\"; // Import from @react-oauth/google\nimport \"./LoginPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  var _location$state, _location$state$from;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || \"/home\";\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!email || !password) {\n      setError(\"Please fill in all fields.\");\n      setTimeout(() => setError(\"\"), 5000);\n      return;\n    }\n    try {\n      const response = await ApiService.loginUser({\n        email,\n        password\n      });\n      if (response.statusCode === 200) {\n        localStorage.setItem(\"token\", response.token);\n        localStorage.setItem(\"role\", response.role);\n        navigate(from, {\n          replace: true\n        });\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n      setTimeout(() => setError(\"\"), 5000);\n    }\n  };\n  const handleGoogleLogin = async response => {\n    const googleToken = response.credential;\n    try {\n      const res = await ApiService.loginWithGoogle({\n        token: googleToken\n      });\n      if (res.statusCode === 200) {\n        localStorage.setItem(\"token\", res.token);\n        localStorage.setItem(\"role\", res.role);\n        navigate(from, {\n          replace: true\n        });\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message);\n      setTimeout(() => setError(\"\"), 5000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-video-container\",\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        autoPlay: true,\n        loop: true,\n        muted: true,\n        className: \"background-video\",\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: \"/path-to-your-video.mp4\",\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true,\n            className: \"animated-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true,\n            className: \"animated-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"animated-button\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"google-login-container\",\n        children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: handleGoogleLogin,\n          onError: error => {\n            setError(\"Google login failed\");\n            setTimeout(() => setError(\"\"), 5000);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"register-link\",\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"pjwGzqmkgJtZBT7S4lCidSsHG4c=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","ApiService","GoogleLogin","jsxDEV","_jsxDEV","LoginPage","_s","_location$state","_location$state$from","email","setEmail","password","setPassword","error","setError","navigate","location","from","state","pathname","handleSubmit","e","preventDefault","setTimeout","response","loginUser","statusCode","localStorage","setItem","token","role","replace","_error$response","_error$response$data","data","message","handleGoogleLogin","googleToken","credential","res","loginWithGoogle","_error$response2","_error$response2$data","className","children","autoPlay","loop","muted","src","type","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","required","onSuccess","onError","href","_c","$RefreshReg$"],"sources":["D:/DACN/phegon-hotel-booking-and-management/frontend/src/component/auth/LoginPage.jsx"],"sourcesContent":["// // import React, { useState } from \"react\";\r\n// // import { useNavigate, useLocation } from \"react-router-dom\";\r\n// // import ApiService from \"../../service/ApiService\";\r\n\r\n// // function LoginPage() {\r\n// //   const [email, setEmail] = useState(\"\");\r\n// //   const [password, setPassword] = useState(\"\");\r\n// //   const [error, setError] = useState(\"\");\r\n// //   const navigate = useNavigate();\r\n// //   const location = useLocation();\r\n\r\n// //   const from = location.state?.from?.pathname || \"/home\";\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n\r\n// //     if (!email || !password) {\r\n// //       setError(\"Please fill in all fields.\");\r\n// //       setTimeout(() => setError(\"\"), 5000);\r\n// //       return;\r\n// //     }\r\n\r\n// //     try {\r\n// //       const response = await ApiService.loginUser({ email, password });\r\n// //       if (response.statusCode === 200) {\r\n// //         localStorage.setItem(\"token\", response.token);\r\n// //         localStorage.setItem(\"role\", response.role);\r\n// //         navigate(from, { replace: true });\r\n// //       }\r\n// //     } catch (error) {\r\n// //       setError(error.response?.data?.message || error.message);\r\n// //       setTimeout(() => setError(\"\"), 5000);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"auth-container\">\r\n// //       <h2>Login</h2>\r\n// //       {error && <p className=\"error-message\">{error}</p>}\r\n// //       <form onSubmit={handleSubmit}>\r\n// //         <div className=\"form-group\">\r\n// //           <label>Email: </label>\r\n// //           <input\r\n// //             type=\"email\"\r\n// //             value={email}\r\n// //             onChange={(e) => setEmail(e.target.value)}\r\n// //             required\r\n// //           />\r\n// //         </div>\r\n// //         <div className=\"form-group\">\r\n// //           <label>Password: </label>\r\n// //           <input\r\n// //             type=\"password\"\r\n// //             value={password}\r\n// //             onChange={(e) => setPassword(e.target.value)}\r\n// //             required\r\n// //           />\r\n// //         </div>\r\n// //         <button type=\"submit\">Login</button>\r\n// //       </form>\r\n\r\n// //       <p className=\"register-link\">\r\n// //         Don't have an account? <a href=\"/register\">Register</a>\r\n// //       </p>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default LoginPage;\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate, useLocation } from \"react-router-dom\";\r\n// import ApiService from \"../../service/ApiService\";\r\n// import \"./LoginPage.css\"; // Sử dụng file CSS đã cập nhật\r\n\r\n// function LoginPage() {\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n//   const location = useLocation();\r\n\r\n//   const from = location.state?.from?.pathname || \"/home\";\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (!email || !password) {\r\n//       setError(\"Please fill in all fields.\");\r\n//       setTimeout(() => setError(\"\"), 5000);\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await ApiService.loginUser({ email, password });\r\n//       if (response.statusCode === 200) {\r\n//         localStorage.setItem(\"token\", response.token);\r\n//         localStorage.setItem(\"role\", response.role);\r\n//         navigate(from, { replace: true });\r\n//       }\r\n//     } catch (error) {\r\n//       setError(error.response?.data?.message || error.message);\r\n//       setTimeout(() => setError(\"\"), 5000);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"auth-page\">\r\n//       <div className=\"background-video-container\">\r\n//         <video autoPlay loop muted className=\"background-video\">\r\n//           <source src=\"/path-to-your-video.mp4\" type=\"video/mp4\" />\r\n//         </video>\r\n//       </div>\r\n\r\n//       <div className=\"auth-container\">\r\n//         <h2 className=\"login-title\">Login</h2>\r\n//         {error && <p className=\"error-message\">{error}</p>}\r\n//         <form onSubmit={handleSubmit} className=\"login-form\">\r\n//           <div className=\"form-group\">\r\n//             <label>Email: </label>\r\n//             <input\r\n//               type=\"email\"\r\n//               value={email}\r\n//               onChange={(e) => setEmail(e.target.value)}\r\n//               required\r\n//               className=\"animated-input\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label>Password: </label>\r\n//             <input\r\n//               type=\"password\"\r\n//               value={password}\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//               required\r\n//               className=\"animated-input\"\r\n//             />\r\n//           </div>\r\n//           <button type=\"submit\" className=\"animated-button\">\r\n//             Login\r\n//           </button>\r\n//         </form>\r\n\r\n//         <p className=\"register-link\">\r\n//           Don't have an account? <a href=\"/register\">Register</a>\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default LoginPage;\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport ApiService from \"../../service/ApiService\";\r\nimport { GoogleLogin } from \"@react-oauth/google\"; // Import from @react-oauth/google\r\nimport \"./LoginPage.css\";\r\n\r\nfunction LoginPage() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const from = location.state?.from?.pathname || \"/home\";\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!email || !password) {\r\n      setError(\"Please fill in all fields.\");\r\n      setTimeout(() => setError(\"\"), 5000);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await ApiService.loginUser({ email, password });\r\n      if (response.statusCode === 200) {\r\n        localStorage.setItem(\"token\", response.token);\r\n        localStorage.setItem(\"role\", response.role);\r\n        navigate(from, { replace: true });\r\n      }\r\n    } catch (error) {\r\n      setError(error.response?.data?.message || error.message);\r\n      setTimeout(() => setError(\"\"), 5000);\r\n    }\r\n  };\r\n\r\n  const handleGoogleLogin = async (response) => {\r\n    const googleToken = response.credential;\r\n\r\n    try {\r\n      const res = await ApiService.loginWithGoogle({ token: googleToken });\r\n      if (res.statusCode === 200) {\r\n        localStorage.setItem(\"token\", res.token);\r\n        localStorage.setItem(\"role\", res.role);\r\n        navigate(from, { replace: true });\r\n      }\r\n    } catch (error) {\r\n      setError(error.response?.data?.message || error.message);\r\n      setTimeout(() => setError(\"\"), 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <div className=\"background-video-container\">\r\n        <video autoPlay loop muted className=\"background-video\">\r\n          <source src=\"/path-to-your-video.mp4\" type=\"video/mp4\" />\r\n        </video>\r\n      </div>\r\n\r\n      <div className=\"auth-container\">\r\n        <h2 className=\"login-title\">Login</h2>\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n        <form onSubmit={handleSubmit} className=\"login-form\">\r\n          <div className=\"form-group\">\r\n            <label>Email: </label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n              className=\"animated-input\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Password: </label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              className=\"animated-input\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"animated-button\">\r\n            Login\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"google-login-container\">\r\n          <GoogleLogin\r\n            onSuccess={handleGoogleLogin}\r\n            onError={(error) => {\r\n              setError(\"Google login failed\");\r\n              setTimeout(() => setError(\"\"), 5000);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <p className=\"register-link\">\r\n          Don't have an account? <a href=\"/register\">Register</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,WAAW,QAAQ,qBAAqB,CAAC,CAAC;AACnD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,eAAA,EAAAC,oBAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMiB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAMiB,QAAQ,GAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}