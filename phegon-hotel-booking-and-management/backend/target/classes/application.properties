spring.application.name=Hotel

server.port=4040
spring.datasource.url=jdbc:mysql://localhost:3306/hotel_database
spring.datasource.username=vinhlq
spring.datasource.password=Vinh2003@
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update

aws.s3.secret.key=xn9A8p39mX3GPxZlgu4mAnJDRf1JmT7HTBRDRUYS
aws.s3.access.key=AKIAVFIWIOQKDSGE6YOC

bucket-name=vinh-hotel-images

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=548424356920-e8b6ed220lnj3afi29lqcsag03h8s78l.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:4040/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.client-name=Google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=id